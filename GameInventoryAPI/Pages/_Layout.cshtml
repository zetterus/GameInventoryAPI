@using System.Security.Claims
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <style>
        .logout-button {
            background: none;
            border: none;
            color: #007bff;
            cursor: pointer;
            padding: 0;
            font: inherit;
            text-decoration: none; /* Убираем подчеркивание ссылки */
        }

            .logout-button:hover {
                text-decoration: underline; /* Добавляем подчеркивание при наведении */
            }
    </style>
</head>
<body>
    <header>
        <nav>
            <a href="/">Home</a> |
            @if (User.Identity.IsAuthenticated)
            {
                @if (User.IsInRole("Admin"))
                {
                    <a href="/Admin">Admin Panel</a>
                }
                else if (User.IsInRole("User"))
                {
                    <a href="/Profile">Profile</a>
                }
                <a href="/Logout" class="logout-button">Logout</a>
            }
            else
            {
                <a href="/Login">Login</a>
                <a href="/Register">Register</a>
            }
            <p>Welcome, @User.Identity.Name!</p>
            <p>Your privileges is @User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value</p>
        </nav>
    </header>
    <main>
        @RenderBody()
        @* @{ *@
        @*     Console.WriteLine("User Information:"); *@
        @*     Console.WriteLine($"Is Authenticated: {User.Identity.IsAuthenticated}"); *@
        @*     Console.WriteLine($"Username: {User.Identity.Name}"); *@
        @*     Console.WriteLine($"Roles: {string.Join(", ", User.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value))}"); *@
        @* } *@
    </main>
</body>
</html>