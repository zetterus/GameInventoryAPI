@using System.Security.Claims
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <!-- Подключаем Google Material Symbols -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200&icon_names=dark_mode" />
    <style>
        :root {
            /* Светлая тема (по умолчанию) */
            --background-color: #ffffff;
            --text-color: #000000;
            --nav-bg-color: #f0f0f0;
            --button-bg-color: #d0d0d0;
            --button-hover-bg-color: #c0c0c0;
            --input-bg-color: #ffffff;
            --input-text-color: #000000;
            --icon-color: #333333; /* Тёмный цвет для светлой темы */
        }

        /* Тёмная тема */
        [data-theme="dark"] {
            --background-color: #1a1a1a;
            --text-color: #ffffff;
            --nav-bg-color: #2d2d2d;
            --button-bg-color: #4a4a4a;
            --button-hover-bg-color: #5a5a5a;
            --input-bg-color: #333333;
            --input-text-color: #ffffff;
            --icon-color: #e3e3e3; /* Светлый цвет для тёмной темы */
        }

        body {
            background-color: var(--background-color);
            color: var(--text-color);
            margin: 0;
            font-family: Arial, sans-serif;
        }

        nav {
            background-color: var(--nav-bg-color);
            padding: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .nav-left button {
            background-color: var(--button-bg-color);
            color: var(--text-color);
            border: none;
            padding: 5px 10px;
            margin-right: 5px;
            cursor: pointer;
        }

            .nav-left button:hover {
                background-color: var(--button-hover-bg-color);
            }

        .nav-right {
            display: flex;
            align-items: center;
        }

            .nav-right input {
                margin-right: 5px;
                padding: 5px;
                background-color: var(--input-bg-color);
                color: var(--input-text-color);
                border: 1px solid var(--text-color);
            }

            .nav-right button {
                background-color: var(--button-bg-color);
                color: var(--text-color);
                border: none;
                padding: 5px 10px;
                cursor: pointer;
            }

                .nav-right button:hover {
                    background-color: var(--button-hover-bg-color);
                }

        .theme-toggle {
            margin-right: 10px;
            cursor: pointer;
        }

        .material-symbols-outlined {
            color: var(--icon-color); /* Цвет иконки зависит от темы */
            font-size: 24px;
            font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
        }
    </style>
</head>
<body>
    <header>
        <nav>
            <div class="nav-left">
                <form method="get" action="/" style="display: inline;">
                    <button type="submit">Home</button>
                </form>
                @if (User.Identity.IsAuthenticated)
                {
                    @if (User.IsInRole("Admin"))
                    {
                        <form method="get" action="/Admin" style="display: inline;">
                            <button type="submit">Admin Panel</button>
                        </form>
                    }
                    else if (User.IsInRole("User"))
                    {
                        <form method="get" action="/Profile" style="display: inline;">
                            <button type="submit">Profile</button>
                        </form>
                    }
                    <form method="post" action="/Logout" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit">Logout</button>
                    </form>
                }
                else
                {
                    <form method="get" action="/Login" style="display: inline;">
                        <button type="submit">Login</button>
                    </form>
                    <form method="get" action="/Register" style="display: inline;">
                        <button type="submit">Register</button>
                    </form>
                }
            </div>
            <div class="nav-right">
                @if (!User.Identity.IsAuthenticated)
                {
                    <form method="post" action="/Login" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <input type="text" name="Username" placeholder="Username" required />
                        <input type="password" name="Password" placeholder="Password" required />
                        <button type="submit">Sign In</button>
                    </form>
                }
                else
                {
                    <div class="theme-toggle" onclick="toggleTheme()">
                        <span class="material-symbols-outlined">dark_mode</span>
                    </div>
                    <span>Welcome, @User.Identity.Name! (Role: @User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value)</span>
                }
            </div>
        </nav>
    </header>
    <main>
        @RenderBody()
        @{
            Console.WriteLine("User Information:");
            Console.WriteLine($"Is Authenticated: {User.Identity.IsAuthenticated}");
            Console.WriteLine($"Username: {User.Identity.Name}");
            Console.WriteLine($"Roles: {string.Join(", ", User.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value))}");
        }
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const savedTheme = localStorage.getItem('theme') || 'light';
            document.documentElement.setAttribute('data-theme', savedTheme);
        });

        function toggleTheme() {
            const currentTheme = document.documentElement.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            document.documentElement.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
        }
    </script>
</body>
</html>